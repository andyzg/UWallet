ATA 1) Binary tree transversal, check if a binary tree is a binary search tree (sorted)
2) Check if string composed of elements (max length 3) in a list (and nothing else)

LinkedIn 1) Given two strings, check if they are anagrams of each other

boolean isAnagram(String a, string b)
{

}

2) Given a binary tree, tell the pre-order, in-order and post order of the tree transversal step

3) Given two of the three orders (pre, in, post), re-build a tree
Tree rebuildTree(char[] inOrder, char[] preOrder)
{
	
}

4) Given an integer N, find trailing zeros of N!

5) Given an integer, find the next palindrome

Noom: 1) Data given: x and y (floats, kilometers), timestamp (long, Unix time ms) and pauses (datastructure of your choice)

Implement a function to return List<long> the time it took to travel each kilometer
Implement data structure first
Interpolation for time and distance for pauses and 1km mark

2) Given arrays A and B containing strings that possibly has repetitions
Find what A and B has in common
What if we have A, B, C, … lots of different arrays?
What if we had A and B being very large and stored on disk?
What if we had n large (1000) computers to do this calculation?

Vmware 1) Count the number of set bits (equal one) in an integer value.
int findBits(int input)
{
}

2) Given two sorted integer arrays of lenght N:
Write a function that returns the kTH smallest value of the combined arrays.
Start with the naïve solution, then optimize (hint bisect/binary search)
int findSmallest(int[] a, int[] b, int k)
{
}

